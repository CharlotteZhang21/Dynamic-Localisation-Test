! function s(r, a, o) {
    function h(i, e) { if (!a[i]) { if (!r[i]) { var t = "function" == typeof require && require; if (!e && t) return t(i, !0); if (p) return p(i, !0); throw new Error("Cannot find module '" + i + "'") } var n = a[i] = { exports: {} };
            r[i][0].call(n.exports, function(e) { var t = r[i][1][e]; return h(t || e) }, n, n.exports, s, r, a, o) } return a[i].exports } for (var p = "function" == typeof require && require, e = 0; e < o.length; e++) h(o[e]); return h }({ 1: [function(e, t, i) {
        function n(e) { return "object" != typeof e && "function" != typeof e || null === e }

        function s(e) { if (n(e)) throw new TypeError("Object.keys called on a non-object"); var t = []; for (var i in e) o.call(e, i) && t.push(i); return t }

        function r(e, t) { return { value: e[t] } } var a = Object.prototype.toString,
            o = Object.prototype.hasOwnProperty;
        i.isArray = "function" == typeof Array.isArray ? Array.isArray : function(e) { return "[object Array]" === a.call(e) }, i.indexOf = function(e, t) { if (e.indexOf) return e.indexOf(t); for (var i = 0; i < e.length; i++)
                if (t === e[i]) return i; return -1 }, i.filter = function(e, t) { if (e.filter) return e.filter(t); for (var i = [], n = 0; n < e.length; n++) t(e[n], n, e) && i.push(e[n]); return i }, i.forEach = function(e, t, i) { if (e.forEach) return e.forEach(t, i); for (var n = 0; n < e.length; n++) t.call(i, e[n], n, e) }, i.map = function(e, t) { if (e.map) return e.map(t); for (var i = new Array(e.length), n = 0; n < e.length; n++) i[n] = t(e[n], n, e); return i }, i.reduce = function(e, t, i) { if (e.reduce) return e.reduce(t, i); var n, s = !1;
            2 < arguments.length && (n = i, s = !0); for (var r = 0, a = e.length; r < a; ++r) e.hasOwnProperty(r) && (s ? n = t(n, e[r], r, e) : (n = e[r], s = !0)); return n }, i.substr = "b" !== "ab".substr(-1) ? function(e, t, i) { return t < 0 && (t = e.length + t), e.substr(t, i) } : function(e, t, i) { return e.substr(t, i) }, i.trim = function(e) { return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "") }, i.bind = function() { var e = Array.prototype.slice.call(arguments),
                t = e.shift(); if (t.bind) return t.bind.apply(t, e); var i = e.shift(); return function() { t.apply(i, e.concat([Array.prototype.slice.call(arguments)])) } }, i.create = "function" == typeof Object.create ? Object.create : function(e, t) { var i; if (null === e) i = { __proto__: null };
            else { if ("object" != typeof e) throw new TypeError("typeof prototype[" + typeof e + "] != 'object'"); var n = function() {};
                n.prototype = e, (i = new n).__proto__ = e } return void 0 !== t && Object.defineProperties && Object.defineProperties(i, t), i }; var h = "function" == typeof Object.keys ? Object.keys : s,
            p = "function" == typeof Object.getOwnPropertyNames ? Object.getOwnPropertyNames : function(e) { if (n(e)) throw new TypeError("Object.getOwnPropertyNames called on a non-object"); var t = s(e); return i.isArray(e) && -1 === i.indexOf(e, "length") && t.push("length"), t }; if ((new Error).hasOwnProperty("description")) { var c = function(e, t) { return "[object Error]" === a.call(e) && (t = i.filter(t, function(e) { return "description" !== e && "number" !== e && "message" !== e })), t };
            i.keys = function(e) { return c(e, h(e)) }, i.getOwnPropertyNames = function(e) { return c(e, p(e)) } } else i.keys = h, i.getOwnPropertyNames = p; if ("function" == typeof Object.getOwnPropertyDescriptor) try { Object.getOwnPropertyDescriptor({ a: 1 }, "a"), i.getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor } catch (e) { i.getOwnPropertyDescriptor = function(t, i) { try { return Object.getOwnPropertyDescriptor(t, i) } catch (e) { return r(t, i) } } } else i.getOwnPropertyDescriptor = r }, {}], 6: [function(e, t, y) {
        function o(e, t) { var i = { seen: [], stylize: s }; return 3 <= arguments.length && (i.depth = arguments[2]), 4 <= arguments.length && (i.colors = arguments[3]), I(t) ? i.showHidden = t : t && y._extend(i, t), k(i.showHidden) && (i.showHidden = !1), k(i.depth) && (i.depth = 2), k(i.colors) && (i.colors = !1), k(i.customInspect) && (i.customInspect = !0), i.colors && (i.stylize = n), w(i, e, i.depth) }

        function n(e, t) { var i = o.styles[t]; return i ? "[" + o.colors[i][0] + "m" + e + "[" + o.colors[i][1] + "m" : e }

        function s(e) { return e }

        function w(t, i, n) { if (t.customInspect && i && A(i.inspect) && i.inspect !== y.inspect && (!i.constructor || i.constructor.prototype !== i)) { var e = i.inspect(n); return T(e) || (e = w(t, e, n)), e } var s = function(e, t) { if (k(t)) return e.stylize("undefined", "undefined"); if (T(t)) { var i = "'" + JSON.stringify(t).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'"; return e.stylize(i, "string") } return x(t) ? e.stylize("" + t, "number") : I(t) ? e.stylize("" + t, "boolean") : G(t) ? e.stylize("null", "null") : void 0 }(t, i); if (s) return s; var r, a, o = M.keys(i),
                h = (r = o, a = {}, M.forEach(r, function(e) { a[e] = !0 }), a); if (t.showHidden && (o = M.getOwnPropertyNames(i)), 0 === o.length) { if (A(i)) { var p = i.name ? ": " + i.name : ""; return t.stylize("[Function" + p + "]", "special") } if (C(i)) return t.stylize(RegExp.prototype.toString.call(i), "regexp"); if (P(i)) return t.stylize(Date.prototype.toString.call(i), "date"); if (E(i)) return v(i) } var c, d, l, u, m = "",
                f = !1,
                g = ["{", "}"];
            (b(i) && (f = !0, g = ["[", "]"]), A(i)) && (m = " [Function" + (i.name ? ": " + i.name : "") + "]"); return C(i) && (m = " " + RegExp.prototype.toString.call(i)), P(i) && (m = " " + Date.prototype.toUTCString.call(i)), E(i) && (m = " " + v(i)), 0 !== o.length || f && 0 != i.length ? n < 0 ? C(i) ? t.stylize(RegExp.prototype.toString.call(i), "regexp") : t.stylize("[Object]", "special") : (t.seen.push(i), c = f ? function(t, i, n, s, e) { for (var r = [], a = 0, o = i.length; a < o; ++a) r.push(L(i, String(a)) ? S(t, i, n, s, String(a), !0) : ""); return M.forEach(e, function(e) { e.match(/^\d+$/) || r.push(S(t, i, n, s, e, !0)) }), r }(t, i, n, h, o) : o.map(function(e) { return S(t, i, n, h, e, f) }), t.seen.pop(), d = c, l = m, u = g, 60 < M.reduce(d, function(e, t) { return t.indexOf("\n"), e + t.replace(/\u001b\[\d\d?m/g, "").length + 1 }, 0) ? u[0] + ("" === l ? "" : l + "\n ") + " " + d.join(",\n  ") + " " + u[1] : u[0] + l + " " + d.join(", ") + " " + u[1]) : g[0] + m + g[1] }

        function v(e) { return "[" + Error.prototype.toString.call(e) + "]" }

        function S(e, t, i, n, s, r) { var a, o, h; if ((h = M.getOwnPropertyDescriptor(t, s) || { value: t[s] }).get ? o = h.set ? e.stylize("[Getter/Setter]", "special") : e.stylize("[Getter]", "special") : h.set && (o = e.stylize("[Setter]", "special")), L(n, s) || (a = "[" + s + "]"), o || (M.indexOf(e.seen, h.value) < 0 ? -1 < (o = G(i) ? w(e, h.value, null) : w(e, h.value, i - 1)).indexOf("\n") && (o = r ? o.split("\n").map(function(e) { return "  " + e }).join("\n").substr(2) : "\n" + o.split("\n").map(function(e) { return "   " + e }).join("\n")) : o = e.stylize("[Circular]", "special")), k(a)) { if (r && s.match(/^\d+$/)) return o;
                (a = JSON.stringify("" + s)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a = a.substr(1, a.length - 2), a = e.stylize(a, "name")) : (a = a.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a = e.stylize(a, "string")) } return a + ": " + o }

        function b(e) { return M.isArray(e) }

        function I(e) { return "boolean" == typeof e }

        function G(e) { return null === e }

        function x(e) { return "number" == typeof e }

        function T(e) { return "string" == typeof e }

        function k(e) { return void 0 === e }

        function C(e) { return h(e) && "[object RegExp]" === i(e) }

        function h(e) { return "object" == typeof e && e }

        function P(e) { return h(e) && "[object Date]" === i(e) }

        function E(e) { return h(e) && "[object Error]" === i(e) }

        function A(e) { return "function" == typeof e }

        function i(e) { return Object.prototype.toString.call(e) }

        function r(e) { return e < 10 ? "0" + e.toString(10) : e.toString(10) }

        function L(e, t) { return Object.prototype.hasOwnProperty.call(e, t) } var M = e("_shims"),
            p = /%[sdj%]/g;
        y.format = function(e) { if (!T(e)) { for (var t = [], i = 0; i < arguments.length; i++) t.push(o(arguments[i])); return t.join(" ") } i = 1; for (var n = arguments, s = n.length, r = String(e).replace(p, function(e) { if ("%%" === e) return "%"; if (s <= i) return e; switch (e) {
                        case "%s":
                            return String(n[i++]);
                        case "%d":
                            return Number(n[i++]);
                        case "%j":
                            try { return JSON.stringify(n[i++]) } catch (e) { return "[Circular]" }
                        default:
                            return e } }), a = n[i]; i < s; a = n[++i]) r += G(a) || !h(a) ? " " + a : " " + o(a); return r }, (y.inspect = o).colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, o.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, y.isArray = b, y.isBoolean = I, y.isNull = G, y.isNullOrUndefined = function(e) { return null == e }, y.isNumber = x, y.isString = T, y.isSymbol = function(e) { return "symbol" == typeof e }, y.isUndefined = k, y.isRegExp = C, y.isObject = h, y.isDate = P, y.isError = E, y.isFunction = A, y.isPrimitive = function(e) { return null === e || "boolean" == typeof e || "number" == typeof e || "string" == typeof e || "symbol" == typeof e || void 0 === e }, y.isBuffer = function(e) { return e && "object" == typeof e && "function" == typeof e.copy && "function" == typeof e.fill && "function" == typeof e.binarySlice }; var a = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        y.log = function() { var e, t;
            e = new Date, t = [r(e.getHours()), r(e.getMinutes()), r(e.getSeconds())].join(":"), [e.getDate(), a[e.getMonth()], t].join(" "), y.format.apply(y, arguments) }, y.inherits = function(e, t) { e.super_ = t, e.prototype = M.create(t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }) }, y._extend = function(e, t) { if (!t || !h(t)) return e; for (var i = M.keys(t), n = i.length; n--;) e[i[n]] = t[i[n]]; return e } }, { _shims: 1 }], 3: [function(e, t) {
        function n() { this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0 } var o = e("util");
        ((t.exports = n).EventEmitter = n).prototype._events = void 0, n.prototype._maxListeners = void 0, n.defaultMaxListeners = 10, n.prototype.setMaxListeners = function(e) { if (!o.isNumber(e) || e < 0) throw TypeError("n must be a positive number"); return this._maxListeners = e, this }, n.prototype.emit = function(e) { var t, i, n, s, r, a; if (this._events || (this._events = {}), "error" === e && (!this._events.error || o.isObject(this._events.error) && !this._events.error.length)) throw (t = arguments[1]) instanceof Error ? t : TypeError('Uncaught, unspecified "error" event.'); if (i = this._events[e], o.isUndefined(i)) return !1; if (o.isFunction(i)) switch (arguments.length) {
                case 1:
                    i.call(this); break;
                case 2:
                    i.call(this, arguments[1]); break;
                case 3:
                    i.call(this, arguments[1], arguments[2]); break;
                default:
                    for (n = arguments.length, s = new Array(n - 1), r = 1; r < n; r++) s[r - 1] = arguments[r];
                    i.apply(this, s) } else if (o.isObject(i)) { for (n = arguments.length, s = new Array(n - 1), r = 1; r < n; r++) s[r - 1] = arguments[r]; for (n = (a = i.slice()).length, r = 0; r < n; r++) a[r].apply(this, s) }
            return !0 }, n.prototype.on = n.prototype.addListener = function(e, t) { var i; if (!o.isFunction(t)) throw TypeError("listener must be a function");
            (this._events || (this._events = {}), this._events.newListener && this.emit("newListener", e, o.isFunction(t.listener) ? t.listener : t), this._events[e] ? o.isObject(this._events[e]) ? this._events[e].push(t) : this._events[e] = [this._events[e], t] : this._events[e] = t, o.isObject(this._events[e]) && !this._events[e].warned) && ((i = o.isUndefined(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners) && 0 < i && this._events[e].length > i && (this._events[e].warned = !0)); return this }, n.prototype.once = function(e, t) {
            function i() { this.removeListener(e, i), t.apply(this, arguments) } if (!o.isFunction(t)) throw TypeError("listener must be a function"); return i.listener = t, this.on(e, i), this }, n.prototype.removeListener = function(e, t) { var i, n, s, r; if (!o.isFunction(t)) throw TypeError("listener must be a function"); if (!this._events || !this._events[e]) return this; if (s = (i = this._events[e]).length, n = -1, i === t || o.isFunction(i.listener) && i.listener === t) delete this._events[e], this._events.removeListener && this.emit("removeListener", e, t);
            else if (o.isObject(i)) { for (r = s; 0 < r--;)
                    if (i[r] === t || i[r].listener && i[r].listener === t) { n = r; break }
                if (n < 0) return this;
                1 === i.length ? (i.length = 0, delete this._events[e]) : i.splice(n, 1), this._events.removeListener && this.emit("removeListener", e, t) } return this }, n.prototype.removeAllListeners = function(e) { var t, i; if (!this._events) return this; if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[e] && delete this._events[e], this; if (0 === arguments.length) { for (t in this._events) "removeListener" !== t && this.removeAllListeners(t); return this.removeAllListeners("removeListener"), this._events = {}, this } if (i = this._events[e], o.isFunction(i)) this.removeListener(e, i);
            else
                for (; i.length;) this.removeListener(e, i[i.length - 1]); return delete this._events[e], this }, n.prototype.listeners = function(e) { return this._events && this._events[e] ? o.isFunction(this._events[e]) ? [this._events[e]] : this._events[e].slice() : [] }, n.listenerCount = function(e, t) { return e._events && e._events[t] ? o.isFunction(e._events[t]) ? 1 : e._events[t].length : 0 } }, { util: 6 }], 17: [function(e, t) { var i = e("util"),
            n = e("events").EventEmitter,
            r = { loading: "loading", default: "default", expanded: "expanded", resized: "resized", hidden: "hidden" },
            s = function() { n.call(this), this.__state = "loading" };
        i.inherits(s, n), s.prototype.get = function() { return this.__state }, s.prototype.set = function(e) { var t, i, n, s = r[(e || "").toLowerCase()]; if (!s) throw { msg: "bad state: " + e }; if (this.__state !== s || "resized" === s) return this.isValid(s) ? (this.__state = s, this.emit("stateChange", this.__state), s) : (i = (t = this).__state, n = s, void("expanded" === i && "resized" === n && t.emit("error", "cannot transition from expanded to resized."))) }, s.prototype.isValid = function(e) { var t = this.__state; if (t && e) { switch (e) {
                    case "resized":
                        switch (t) {
                            case "resized":
                                return !0;
                            case "hidden":
                            case "loading":
                            case "expanded":
                                return !1 } break;
                    case "expanded":
                        switch (t) {
                            case "loading":
                            case "hidden":
                                return !1 } break;
                    case "loading":
                        return !1 } return !0 } }, t.exports = s }, { events: 3, util: 6 }], 15: [function(e, t) {
        function i(e) { o.call(this); var t, i = this,
                n = new p(e.screen),
                s = Object.create(n.getScreenSize()),
                r = e.placementType || "inline",
                a = new h;
            s.useCustomClose = !1, this.open = function(e) { n.showMessage(e) }, this.close = function() { switch (a.get()) {
                    case "default":
                        n.hide(), n.resetSize(), a.set("hidden"); break;
                    case "resized":
                    case "expanded":
                        n.hideClose(), n.resetSize(), a.set("default") } }, this.resize = function() { var e = this.getResizeProperties(); if (e) switch (a.get()) {
                    case "expanded":
                    case "default":
                    case "resized":
                        n.showClose(); var t = n.getSize();
                        t.width == e.width && t.height == e.height || (n.setSize(e.width || 100, e.height || 100), this.emit("sizeChange", +e.width, +e.height), a.set("resized")) } else this.emit("error") }, this.expand = function(e) { if (a.isValid("expanded")) { var t = this.getExpandProperties();
                    n.setSize(t.width, t.height), t.useCustomClose ? n.hideClose() : n.showClose(), e && n.showUrl(e), a.set("expanded") } }, this.getPlacementType = function() { return r }, this.getExpandProperties = function() { return s }, this.getResizeProperties = function() { return t }, this.setOrientationProperties = function() {}, this.setExpandProperties = function(e) { s = e }, this.setResizeProperties = function(e) { t = e }, this.playVideo = function(e) { n.showVideo(e) }, this.storePicture = function() { n.showMessage("mraid.storePicture(...)") }, this.createCalendarEvent = function() { n.showMessage("mraid.createCalendarEvent(...)") }, this.getCurrentPosition = function() { return n.getCurrentPosition() }, this.getDefaultPosition = function() { return n.getDefaultPosition() }, this.getMaxSize = function() { return n.getScreenSize() }, this.getScreenSize = function() { return n.getScreenSize() }, this.supports = function(e) { return "string" == typeof e && e.toLowerCase() in c }, this.getVersion = function() { return "jet-tester" }, this.getState = function() { return a.get() }, this.isViewable = function() { return !0 }, this.addEventListener = function(e, t) { this.on(e, t) }, this.removeEventListener = function(e, t) { t ? this.removeListener(e, t) : this.removeAllListeners(e) }, this.useCustomClose = function(e) { var t = this.getExpandProperties();
                t.useCustomClose = e, this.setExpandProperties(t) }, this.triggerReady = function() {!1 !== n.triggerReady() && (a.set("default"), i.emit("ready"), window.top.postMessage({ name: "mraid-proclamation" }, "*")) }, a.on("stateChange", function(e) { i.emit("stateChange", e) }), a.on("error", function(e) { i.emit("error", e) }), n.on("close-click", function() { i.close() }), i.on("error", function() {}) } var n = e("util"),
            o = e("events").EventEmitter,
            h = e("./state-manager"),
            p = e("./web-view"),
            c = { sms: !0, tel: !0, calendar: !0, storepicture: !0, inlinevideo: !0 };
        n.inherits(i, o), t.exports = i }, { "./state-manager": 17, "./web-view": 19, events: 3, util: 6 }], 19: [function(e, t) { var i = e("util");
        EventEmitter = e("events").EventEmitter, isTopWindow = window === window.top; var n = function(e) {
            function n() { var e, t = { width: r.clientWidth, height: r.clientHeight, from: "html" }; if ((e = t) && e.width + "x" + e.height in p) return t; var i = function() { var e, t = window.location.search.replace(/\bmraid-screen=\d{2,4}x\d{2,4}\b/gi, ""),
                        i = t.match(/\b\d{2,4}[x\/]\d{2,4}/i); if (i && i.length) return { width: +(e = i[0].split(/[^\d]/))[0], height: +e[1], from: "url" }; var n = t.match(/\bwidth=(\d{2,4})\b/i); if (!n || n.length < 2) return null; var s = t.match(/\bheight=(\d{2,4})\b/i); return !s || s.length < 2 ? null : { width: +n[1], height: +s[1], from: "url" } }(); return i && t.width == i.width && t.height == i.height && (i.from = "html/url"), i || t }

            function s(e) { return t || (t = e || n()), t } window.view = this, EventEmitter.call(this); var r, a, t, o, h = this,
                p = { "480x80": !0, "300x50": !0, "320x50": !0, "320x250": !0, "728x90": !0, "300x480": !0 },
                c = "mraid-marker";
            o = { width: (e = e || {}).width || 768, height: e.height || 1024 }, this.hide = function() { r.style.display = "none" }, this.show = function() { r.style.display = "block" }, this.showClose = function() { a.style.display = "block" }, this.hideClose = function() { a.style.display = "none" }, this.resetSize = function() { t && this.setSize(t.width, t.height) }, this.getInitialSize = function() { return s() }, this.getScreenSize = function() { return o }, this.getCurrentPosition = this.getSize = function() { return r ? { x: 0, y: 0, width: r.clientWidth, height: r.clientHeight } : { x: 0, y: 0 } }, this.getDefaultPosition = function() { var e = Object.create(this.getInitialSize()); return e.x = 0, e.y = 0, e }, this.showMessage = function(e) { return console.log("MRAID: %c%s", "color: #006666; font-weight: bold;", e) }, this.showUrl = function(e) { this.showMessage("showURL " + e) }, this.showVideo = function(e) { this.showMessage("showVideo " + e) }, this.setSize = function(e, t) { s(), e = Math.min(~~e, o.width), t = Math.min(~~t, o.height); var i = isTopWindow ? r : function(i, e) { var n = (e = e || i.parent).document.getElementsByTagName("iframe"); if (n) { try { throw void 0 } catch (t) { for (t = 0; t < n.length; t++) try { throw void 0 } catch (e) { e = t; try { if (n[e].contentWindow !== i) continue; return n[e] } finally { t = e } } } return null } }(window);
                i.style.width = e + "px", i.style.height = t + "px" }, this.triggerReady = function() { var e, t = document.querySelector("iframe#mraid-ad-frame");
                t && (t.src = ((e = new URL(window.location.toString())).pathname = e.pathname.replace("mraid.html", "index.html"), e.searchParams.set(c, "1"), e.toString())), (r = document.body).className = "mraid-webview", (a = document.createElement("div")).className = "mraid-close", a.innerHTML = "<span>X</span>", a.addEventListener("click", function() { h.emit("close-click"), h.hideClose() }), r.appendChild(a); var i = n();
                new URL(window.location.toString()).searchParams.get(c) && (s(i), this.setSize(i.width, i.height)) } };
        i.inherits(n, EventEmitter), t.exports = n }, { events: 3, util: 6 }], 14: [function(e) { if (window.mraid) "function" == typeof window.mraid.enable && window.mraid.enable();
        else { var t, i = e("./mraid"); if (window.mraid = new i({ placementType: "inline", screen: (t = new URL(window.top.location.toString()).searchParams.get("mraid-screen"), t && 2 === (t = t.split(/x/i)).length ? { width: ~~t[0], height: ~~t[1] } : { width: 1024, height: 768 }) }), window.mocha || "complete" === window.document.readyState) return window.mraid.triggerReady();
            window.addEventListener("load", function() { window.mraid.triggerReady() }) } }, { "./mraid": 15 }] }, {}, [14]);
var I18 = { locale: "en", strings: {}, init: function(e, t) { e || (e = "en"), t || (t = {}), I18.locale = e, I18.strings = t }, f: function(e) { var t = e,
            i = I18.strings[e]; return i && i[I18.locale] && (t = i[I18.locale]), arguments[0] = t, I18.sprintf.apply(I18, arguments) }, sprintf: function() { var v = arguments,
            S = 0,
            e = v[S++],
            b = function(e, t, i, n) { i || (i = " "); var s = e.length >= t ? "" : new Array(1 + t - e.length >>> 0).join(i); return n ? e + s : s + e },
            I = function(e, t, i, n, s, r) { var a = n - e.length; return 0 < a && (e = i || !s ? b(e, n, r, i) : e.slice(0, t.length) + b("", a, "0", !0) + e.slice(t.length)), e },
            G = function(e, t, i, n, s, r, a) { var o = e >>> 0; return e = (i = i && o && { 2: "0b", 8: "0", 16: "0x" }[t] || "") + b(o.toString(t), r || 0, "0", !1), I(e, i, n, s, a) },
            x = function(e, t, i, n, s, r) { return n && (e = e.slice(0, n)), I(e, "", t, i, s, r) }; return e.replace(/%%|%(\d+\$)?([-+\'#0 ]*)(\*\d+\$|\*|\d+)?(\.(\*\d+\$|\*|\d+))?([scboxXuideEfFgG])/g, function(e, t, i, n, s, r, a) { var o, h, p, c, d; if ("%%" === e) return "%"; for (var l = !1, u = "", m = !1, f = !1, g = " ", y = i.length, w = 0; i && w < y; w++) switch (i.charAt(w)) {
                case " ":
                    u = " "; break;
                case "+":
                    u = "+"; break;
                case "-":
                    l = !0; break;
                case "'":
                    g = i.charAt(w + 1); break;
                case "0":
                    m = !0, g = "0"; break;
                case "#":
                    f = !0 }
            if ((n = n ? "*" === n ? +v[S++] : "*" === n.charAt(0) ? +v[n.slice(1, -1)] : +n : 0) < 0 && (n = -n, l = !0), !isFinite(n)) throw new Error("sprintf: (minimum-)width must be finite"); switch (r = r ? "*" === r ? +v[S++] : "*" === r.charAt(0) ? +v[r.slice(1, -1)] : +r : -1 < "fFeE".indexOf(a) ? 6 : "d" === a ? 0 : void 0, d = t ? v[t.slice(0, -1)] : v[S++], a) {
                case "s":
                    return x(String(d), l, n, r, m, g);
                case "c":
                    return x(String.fromCharCode(+d), l, n, r, m);
                case "b":
                    return G(d, 2, f, l, n, r, m);
                case "o":
                    return G(d, 8, f, l, n, r, m);
                case "x":
                    return G(d, 16, f, l, n, r, m);
                case "X":
                    return G(d, 16, f, l, n, r, m).toUpperCase();
                case "u":
                    return G(d, 10, f, l, n, r, m);
                case "i":
                case "d":
                    return o = +d || 0, d = (h = (o = Math.round(o - o % 1)) < 0 ? "-" : u) + b(String(Math.abs(o)), r, "0", !1), I(d, h, l, n, m);
                case "e":
                case "E":
                case "f":
                case "F":
                case "g":
                case "G":
                    return h = (o = +d) < 0 ? "-" : u, p = ["toExponential", "toFixed", "toPrecision"]["efg".indexOf(a.toLowerCase())], c = ["toString", "toUpperCase"]["eEfFgG".indexOf(a) % 2], d = h + Math.abs(o)[p](r), I(d, h, l, n, m)[c]();
                default:
                    return e } }) } };

function AssetsPreloader(e) { this.assets = e, this.endCallback = null, this.atlasesParsedCnt = 0, this.imagesLoaded = !1, this.fontsLoaded = !1, this.onImagesLoaded = this.onImagesLoaded.bind(this), this.onAtlasParsed = this.onAtlasParsed.bind(this) } AssetsPreloader.prototype.preload = function(e) { this.endCallback = e; var t = !1; if (this.assets.images && this.assets.images.length) { t = !0; for (var i = 0; i < this.assets.images.length; i++) PIXI.loader.add(this.assets.images[i].name, this.assets.images[i].url) } if (this.assets.atlases && this.assets.atlases.length)
        for (t = !0, i = 0; i < this.assets.atlases.length; i++) PIXI.loader.add("__atlas__" + i, this.assets.atlases[i].meta.image);
    t ? PIXI.loader.load(this.onImagesLoaded) : (this.imagesLoaded = !0, this.finish()), this.assets.fonts && this.assets.fonts.length ? this.preloadFonts() : (this.fontsLoaded = !0, this.finish()) }, AssetsPreloader.prototype.preloadFonts = function() { for (var e = document.getElementsByTagName("head")[0], t = [], i = 0; i < this.assets.fonts.length; i++) { var n = this.assets.fonts[i],
            s = document.createElement("style");
        s.type = "text/css", s.appendChild(document.createTextNode("@font-face {font-family: " + n.name + "; src: url(" + n.url + ");}")), e.appendChild(s), t.push(new FontFaceObserver(n.name).load()) } var r = this;
    Promise.all(t).then(function() { r.fontsLoaded = !0, r.finish() }) }, AssetsPreloader.prototype.finish = function() { this.imagesLoaded && this.fontsLoaded && this.endCallback && this.endCallback() }, AssetsPreloader.prototype.onImagesLoaded = function() { if (!this.assets.atlases || !this.assets.atlases.length) return this.imagesLoaded = !0, void this.finish(); for (var e = 0; e < this.assets.atlases.length; e++) { var t = this.assets.atlases[e];
        new PIXI.Spritesheet(PIXI.loader.resources["__atlas__" + e].texture.baseTexture, t).parse(this.onAtlasParsed) } }, AssetsPreloader.prototype.onAtlasParsed = function() { this.atlasesParsedCnt++, this.atlasesParsedCnt >= this.assets.atlases.length && (this.imagesLoaded = !0, this.finish()) };
var SoundsManager = {};
SoundsManager.soundsOff = Howler.mute.bind(Howler, !0), SoundsManager.soundsOn = Howler.mute.bind(Howler, !1), SoundsManager.enabled = !0, SoundsManager.play = function(e, t, i) { if (SoundsManager.enabled) { t = t || !1, i = i || 1; for (var n = "", s = 0; s < ASSETS.sounds.length; s++)
            if (ASSETS.sounds[s].name === e) { n = ASSETS.sounds[s].url; break }
        if (n) { var r = new Howl({ src: [n], autoplay: !0, loop: t, volume: i }); return r.play(), r } return console.warn("Sound " + e + " not found"), null } }, SoundsManager.init = function() { var e = SoundsManager.getVisibiltyProps();
    e.visibilityChange && document.addEventListener(e.visibilityChange, function() { document[e.hidden] ? SoundsManager.soundsOff() : SoundsManager.soundsOn() }) }, SoundsManager.getVisibiltyProps = function() { var e, t; return void 0 !== document.hidden ? (e = "hidden", t = "visibilitychange") : void 0 !== document.mozHidden ? (e = "mozHidden", t = "mozvisibilitychange") : void 0 !== document.msHidden ? (e = "msHidden", t = "msvisibilitychange") : void 0 !== document.webkitHidden && (e = "webkitHidden", t = "webkitvisibilitychange"), { hidden: e, visibilityChange: t } };
var LayoutManager = {};

function Sprite(e) { var t = e ? PIXI.Texture.fromFrame(e) : PIXI.Texture.EMPTY;
    PIXI.extras.AnimatedSprite.call(this, [t]), this.anchor.set(.5), this.stop() }

function AnimatedSprite(e) { Sprite.call(this), this.animationSpeed = .4, this.textures = AnimatedSprite.getFrames(e), this.textures.length && (this.texture = this.textures[0], this.play()) }

function SpineSprite(e) { if (Sprite.call(this), this.anchor.set(.5), !e) throw Error("SpineSprite requires prepared skeleton data"); var t = new PIXI.spine.Spine(e);
    t.skeleton.setToSetupPose(), t.autoUpdate = !1, this.plaing = !1, this.addChild(t), this.view = t }

function GameWindow() { Sprite.call(this) } LayoutManager.width = 0, LayoutManager.height = 0, LayoutManager.gameWidth = 0, LayoutManager.gameHeight = 0, LayoutManager.orientation = "", LayoutManager.LANDSCAPE = 1, LayoutManager.PORTRAIT = 2, LayoutManager.fitLayout = function() { var e = document.querySelector(".mraid-close");
    e && (e.style.display = "none"); var t, i, n = window.innerWidth,
        s = window.innerHeight;
    LayoutManager.width === n && LayoutManager.height === s || (document.body.style.width = n + "px", document.body.style.height = s + "px", LayoutManager.width = n, LayoutManager.height = s, LayoutManager.orientation = s < n ? LayoutManager.LANDSCAPE : LayoutManager.PORTRAIT, LayoutManager.orientation === LayoutManager.LANDSCAPE ? (i = Game.size.w, (t = Math.floor(i * (n / s))) < Game.size.h && (t = Game.size.h, i = Math.floor(Game.size.h * (s / n)))) : (i = Game.size.h, (t = Math.floor(i * (n / s))) < Game.size.w && (t = Game.size.w, i = Math.floor(Game.size.w * (s / n)))), Game.app.renderer.resize(t, i), Game.app.view.style.width = n + "px", Game.app.view.style.height = s + "px", LayoutManager.gameWidth = t, LayoutManager.gameHeight = i, Game.onResize()) }, Sprite.prototype = Object.create(PIXI.extras.AnimatedSprite.prototype), Sprite.prototype.addTween = function(e, t, i, n, s, r) { var a = new TWEEN.Tween(e).to(t, i); return n && a.easing(n), s && a.onComplete(s), r && a.onUpdate(r), a.start(), a }, Sprite.prototype.moveTo = function(e, t, i, n, s, r) { return this.addTween(this.position, { x: e, y: t }, i, n, s, r) }, Sprite.prototype.moveBy = function(e, t, i, n, s, r) { return this.addTween(this.position, { x: this.position.x + e, y: this.position.y + t }, i, n, s, r) }, Sprite.prototype.fadeTo = function(e, t, i, n, s) { return this.addTween(this, { alpha: e }, t, i, n, s) }, Sprite.prototype.fadeBy = function(e, t, i, n, s) { return this.addTween(this, { alpha: this.alpha + e }, t, i, n, s) }, Sprite.prototype.rotateTo = function(e, t, i, n, s) { return this.addTween(this, { rotation: e }, t, i, n, s) }, Sprite.prototype.rotateBy = function(e, t, i, n, s) { return this.addTween(this, { rotation: this.rotation + e }, t, i, n, s) }, Sprite.prototype.scaleTo = function(e, t, i, n, s, r) { return this.addTween(this.scale, { x: e, y: t }, i, n, s, r) }, Sprite.prototype.scaleBy = function(e, t, i, n, s, r) { return this.addTween(this.scale, { x: this.scale.x + e, y: this.scale.y + t }, i, n, s, r) }, Sprite.create = function(e) { return new Sprite(e) }, AnimatedSprite.prototype = Object.create(Sprite.prototype), AnimatedSprite.getFrames = function(e) { var t = []; for (var i in PIXI.TextureCache)
        if (i.substr(0, e.length) === e) { var n = PIXI.Texture.fromFrame(i);
            n._ix = parseInt(i.substr(e.length)), t.push(n) }
    return t.length ? t.sort(AnimatedSprite.sortTextures) : (t = [PIXI.Texture.EMPTY], console.warn("Unknown animation", e)), t }, AnimatedSprite.sortTextures = function(e, t) { return e._ix > t._ix ? 1 : e._ix < t._ix ? -1 : 0 }, AnimatedSprite.create = function(e) { return new AnimatedSprite(e) }, SpineSprite.prototype = Object.create(Sprite.prototype), SpineSprite.prototype.setAnimationByName = function(e, t, i) { this.view.state.setAnimation(e, t, i), this.view.update(0) }, SpineSprite.prototype.play = function() { this.plaing = !0 }, SpineSprite.prototype.stop = function() { this.plaing = !1 }, SpineSprite.pool = [], SpineSprite.getData = function(e, t) { for (var i in ASSETS.spine) { var n = i.split("."); if (n[0] === e && n[1] === t) return ASSETS.spine[i] } return null }, SpineSprite.getAtlas = function(e) { var t = SpineSprite.getData(e, "atlas"); return (t = t.split("\\n")).join("\n") }, SpineSprite.create = function(e) { var t = SpineSprite.getData(e, "json"),
        i = SpineSprite.getAtlas(e),
        n = [],
        s = new PIXI.spine.core.TextureAtlas(i, function(e, t) { var i = PIXI.BaseTexture.fromImage(ASSETS.spine[e]);
            n.push(i), t(i) }),
        r = new SpineSprite(new PIXI.spine.core.SkeletonJson(new PIXI.spine.core.AtlasAttachmentLoader(s)).readSkeletonData(t)); return SpineSprite.pool.push(r), r }, SpineSprite.destroy = function(e) { var t = SpineSprite.pool.indexOf(e);
    0 <= t && SpineSprite.pool.splice(t, 1) }, SpineSprite.update = function(e) { for (var t = 0; t < SpineSprite.pool.length; t++) SpineSprite.pool[t].plaing && SpineSprite.pool[t].view.update(e / 1e3) }, GameWindow.prototype = Object.create(Sprite.prototype), GameWindow.prototype.onShow = function() {}, GameWindow.prototype.onHide = function(e) { e && e() }, GameWindow.prototype.onRemove = function() {}, GameWindow.prototype.onResize = function() {}, GameWindow.prototype.tick = function(e) {};
var Game = {};

function Enemy() { PIXI.Container.call(this), this.cont = this.addChild(new PIXI.Container), this.counter = 1, this.counterText = new PIXI.Text(this.counter + "/5", { fontFamily: "OpenSans", fontWeight: "bold", fontSize: 60, fill: "#ffffff", stroke: "#000", strokeThickness: 5 }), this.counterText.anchor.set(.5), this.addChild(this.counterText), this.enemyIcon = PIXI.Sprite.fromImage("boss_icon"), this.enemyIcon.anchor.set(.5), this.addChild(this.enemyIcon), this.angryBird = this.addChild(new PIXI.Container); var e = this.angryBird.addChild(new AnimatedSprite("boss1/angryBird_"));
    e.width = 450, e.scale.y = e.scale.x, e.animationSpeed = .16, this.cont.addChild(this.angryBird), this.angryBird.DMG = 600, this.angryBird.bar = this.angryBird.addChild(new ProgressBar(this.angryBird.DMG)), this.angryBird.bar.scale.set(.9), this.angryBird.pos = { p: -200, l: 250 }, this.angryBird.name = this.angryBird.addChild(r(I18.f("ANGRY_BIRD"))), this.angryBird.name.pos = { p: { x: 0, y: -250 }, l: { x: -370, y: 245 } }, this.animal = this.addChild(new PIXI.Container); var t = this.animal.addChild(new AnimatedSprite("boss2/animal_"));
    t.scale.set(.8), t.animationSpeed = .16, this.cont.addChild(this.animal), this.animal.DMG = 2100, this.animal.bar = this.animal.addChild(new ProgressBar(this.animal.DMG)), this.animal.bar.scale.set(.9), this.animal.pos = { p: -150, l: 310 }, this.animal.name = this.animal.addChild(r(I18.f("OHOHONO"))), this.animal.name.pos = { p: { x: 0, y: -190 }, l: { x: -370, y: 300 } }, this.ninjaStar = this.addChild(new PIXI.Container); var i = this.ninjaStar.addChild(new AnimatedSprite("boss3/ninjaStar_"));
    i.scale.set(.8), i.animationSpeed = .11, this.cont.addChild(this.ninjaStar), this.ninjaStar.DMG = 6200, this.ninjaStar.bar = this.ninjaStar.addChild(new ProgressBar(this.ninjaStar.DMG)), this.ninjaStar.pos = { p: -130, l: 310 }, this.ninjaStar.name = this.ninjaStar.addChild(r(I18.f("NINJA_STAR"))), this.ninjaStar.name.pos = { p: { x: 0, y: -170 }, l: { x: -370, y: 305 } }, this.bossBigSpikes = this.addChild(new PIXI.Container); var n = this.bossBigSpikes.addChild(new AnimatedSprite("boss4/bossBigSpikes_"));
    n.scale.set(.7), n.animationSpeed = .16, this.cont.addChild(this.bossBigSpikes), this.bossBigSpikes.DMG = 15e3, this.bossBigSpikes.bar = this.bossBigSpikes.addChild(new ProgressBar(this.bossBigSpikes.DMG)), this.bossBigSpikes.pos = { p: -170, l: 310 }, this.bossBigSpikes.name = this.bossBigSpikes.addChild(r(I18.f("DARK_JESTER"))), this.bossBigSpikes.name.pos = { p: { x: 0, y: -210 }, l: { x: -370, y: 305 } }, this.darkLord = this.addChild(new PIXI.Container); var s = this.darkLord.addChild(new AnimatedSprite("boss5/darkLord_"));

    function r(e) { var t = new PIXI.Text(e, { fontFamily: "OpenSans", fontWeight: "bold", fontStyle: "italic", fontSize: 40, fill: "#ffffff", stroke: "#000", padding: 1e3, strokeThickness: 5 }); return t.anchor.set(.5), t } s.scale.set(.95), s.animationSpeed = .13, this.cont.addChild(this.darkLord), this.darkLord.DMG = 84e3, this.darkLord.bar = this.darkLord.addChild(new ProgressBar(this.darkLord.DMG)), this.darkLord.bar.scale.set(1.2), this.darkLord.pos = { p: -140, l: 375 }, this.darkLord.name = this.darkLord.addChild(r(I18.f("DARK_LORD"))), this.darkLord.name.pos = { p: { x: 0, y: -180 }, l: { x: -400, y: 370 } }, this.angryBird.y = -37, this.animal.y = -95, this.ninjaStar.y = -100, this.bossBigSpikes.y = -100, this.darkLord.y = -142, this.enemies = [this.angryBird, this.animal, this.ninjaStar, this.bossBigSpikes, this.darkLord], this.angryBird.visible = this.animal.visible = this.ninjaStar.visible = this.bossBigSpikes.visible = this.darkLord.visible = !1 }

function Hero() { PIXI.Container.call(this), this.hero = new AnimatedSprite("hero_attack/playerAttack_"), this.hero.gotoAndStop(7), this.frame = 0, this.hero.width = 450, this.hero.scale.x = this.hero.scale.y, this.hero.anchor.set(.5), this.hero.animationSpeed = .2, this.addChild(this.hero) }

function ProgressBar(e) { PIXI.Sprite.call(this), this.max = e, this.setTexture(PIXI.Texture.fromFrame("life_bar")), this.anchor.set(.5), this.position.set(0, -360), this.front = this.addChild(PIXI.Sprite.fromFrame("life")), this.front.anchor.set(.5), this.front.position.set(0, -2.5), this.front.scale.x = 1.7, this.graphics = new PIXI.Graphics, this.graphics.beginFill(16740363, 1), this.graphics.drawRect(this.front.x - this.front.width / 2, this.front.y - this.front.height / 2, this.front.width, this.front.height), this.addChild(this.graphics), this.front.mask = this.graphics, this.reset(), this.part = this.front.width * MainGame.i.currDMG / this.max }

function Score() { PIXI.Sprite.call(this), this.setTexture(PIXI.Texture.fromFrame("scorebar_1")), this.coinScore = this.addChild(new Sprite("scorebar")), this.sum = 0, this.gain = [500, 750, 3380, 4620, 2e4], this.gainText = this.addChild(new PIXI.Text(this.sum, { fontFamily: "OpenSans", fontWeight: "bold", fontStyle: "italic", fontSize: 40, fill: "#ffffff", stroke: "#000", strokeThickness: 5, wordWrap: !0, padding: 30 })), this.gainText.anchor.set(.5), this.addChild(this.gainText), this.anchor.set(.5), this.position.set(0, 290), (window.coinScore = this).tweenCounter = null }

function LvlUpButton() { PIXI.Sprite.call(this); var e = PIXI.Texture.fromFrame("LUp_btn");
    this.setTexture(e), this.hovLvl = PIXI.Sprite.fromFrame("pin_LUp_btn"), this.addChild(this.hovLvl), this.hovLvl.anchor.set(.5), this.anchor.set(.5), this.hovLvl.scale.set(.8), this.hovLvl.visible = !1, this.price = [100, 500, 1e3, 4e3, 8e3], this.currPrice = this.price.shift(), this.priceText = new PIXI.Text(this.currPrice, { fontFamily: "OpenSans", fontWeight: "bold", fontSize: 30, fill: "#ffffff", stroke: "#000", strokeThickness: 5 }), this.priceText.anchor.set(.5), this.addChild(this.priceText), this.dmg = [200, 500, 1e3, 2e3, 3500], this.currDMG = this.dmg.shift(), this.dmgText = new PIXI.Text("+" + this.currDMG + " DMG", { fontFamily: "OpenSans", fontWeight: "bold", fontSize: 30, fill: "#ffffff", stroke: "#000", strokeThickness: 5 }), this.addChild(this.dmgText), this.dmgText.anchor.set(.5), this.coin = PIXI.Sprite.fromImage("scorebar"), this.addChild(this.coin), this.interactive = !0, this.buttonMode = !0; var t = this.addChild(new PIXI.Text(I18.f("LEVEL_UP"), { fontFamily: "OpenSans", fill: "#ffffff", fontSize: 30, fontWeight: "bold" }));
    t.anchor.set(.5, .5), t.position.set(0, -3), this.plague = this.addChild(new PIXI.Graphics), this.plague.beginFill(0, .5), this.plague.drawRect(-e.width / 2, -e.height / 2, e.width, e.height), this.heroIcon = PIXI.Sprite.fromImage("hero_icon"), this.addChild(this.heroIcon), this.heroIconText = this.addChild(new PIXI.Text(I18.f("SWORD_MASTER"), { fontFamily: "OpenSans", fontWeight: "bold", fontSize: 40, fill: "#ffffff" })), this.heroIconText.anchor.set(.5), this.lvl = 1, this.heroIconLevel = this.addChild(new PIXI.Text(I18.f("LV"), { fontFamily: "OpenSans", fontWeight: "bold", fontSize: 60, fill: "#ffffff", stroke: "#000", strokeThickness: 5 })), this.heroIconLevel.anchor.set(.5), this.heroLevelCounter = this.addChild(new PIXI.Text(this.lvl, { fontFamily: "OpenSans", fontWeight: "bold", fontSize: 50, fill: "#00aff0", stroke: "#000", strokeThickness: 2 })), this.heroIconLevel.anchor.set(.5), this.on("pointerdown", this.handleClick, this) }

function Smoke() { AnimatedSprite.call(this, "smoke/"), this.visible = !1, this.loop = !1, this.stop(), this.width = 850, this.y = -65, this.anchor.set(.5), this.animationSpeed = .25 }

function HitAttack() { PIXI.Sprite.call(this), this.visible = !1, (HitAttack.i = this).hitFill = new PIXI.Graphics, this.hitFill.beginFill(0, .8), this.hitFill.scale.set(3), this.hitFill.drawRect(-Game.app.renderer.width / 2, -Game.app.renderer.height / 2, Game.app.renderer.width, Game.app.renderer.height), this.addChild(this.hitFill), this.hitText = this.addChild(new PIXI.Text(I18.f("LEVEL_UP_YOUR_HERO"), { fontFamily: "OpenSans", fontWeight: "bold", fontStyle: "italic", align: "center", fontSize: 120, padding: 20, fill: "#ffffff", stroke: "#000", strokeThickness: 5 })), this.hitText.anchor.set(.5), this.clickHand = PIXI.Sprite.fromImage("hand"), this.addChild(this.clickHand), this.clickHand.anchor.set(.5), this.clickHand.alpha = 0, this.clickHand.rotation = -Math.PI / 6, this.hitFill.interactive = !0, MainGame.i.lvlBtn.interactive = !0, this.hitFill, MainGame.i.lvlBtn.once("pointerdown", function(e) { this.hitFill.visible && (this.hitFill.visible = !1, this.hitText.visible = !1, this.clickHand.visible = !1) }, this), this.onResize() }

function DownloadBtn() { PIXI.Sprite.call(this), this.setTexture(PIXI.Texture.fromFrame("CTA")), this.anchor.set(.5), this.downloadBtnText = this.addChild(new PIXI.Text(I18.f(getLocalisedCta().text), { fontFamily: "OpenSans", fontWeight: "bold", fontSize: 60, fill: "#ffffff" })), this.downloadBtnText.anchor.set(.5), this.arrow = PIXI.Sprite.fromImage("CTA_arrow"), this.addChild(this.arrow), this.arrow.anchor.set(.5), this.on("pointerdown", this.handleClick, this), this.interactive = !0, this.buttonMode = !0 }

function Time() { PIXI.Container.call(this), (Time.i = this).time = 31e3, this.timeText = new PIXI.Text(this.getTimeString(this.time) + "s", { fontFamily: "OpenSans", fontSize: 110, fill: "#ffffff", align: "center", lineHeight: "65", maxWidth: "300", stroke: "#000", strokeThickness: 5 }), this.timeText.anchor.set(.5), this.timeText.key = "time_text", this.addChild(this.timeText) }

function Intro() { Sprite.call(this), this.plagueI = new PIXI.Graphics, this.sky = PIXI.Sprite.fromImage("sky"), this.addChild(this.sky), this.sky.anchor.set(.5), this.ground = PIXI.Sprite.fromImage("ground"), this.addChild(this.ground), this.ground.anchor.set(.5), this.plagueI.beginFill(0, .8), this.plagueI.scale.set(3), this.plagueI.drawRect(-Game.app.renderer.width / 2, -Game.app.renderer.height / 2, Game.app.renderer.width, Game.app.renderer.height), this.addChild(this.plagueI), this.desk = PIXI.Sprite.fromImage("desk"), this.addChild(this.desk), this.desk.scale.x = 5.5, this.desk.scale.y = 1.2, this.desk.anchor.set(.5), this.boss = PIXI.Sprite.fromImage("Dark_lord-min"), this.addChild(this.boss), this.boss.anchor.set(.5), this.boss.scale.set(1.8), this.defeatText = new PIXI.Text(I18.f("DEFEAT_DARK_LORD"), { fontFamily: "OpenSans", fontWeight: "bold", align: "center", fontStyle: "italic", fontSize: 120, padding: 1e3, fill: "#ffffff" }), this.defeatText.anchor.set(.5), this.addChild(this.defeatText), this.isOut = !1, this.onResize(); var e = this.defeatText.x;
    this.boss.alpha = 0, this.defeatText.x = .9 * -Game.app.screen.width;
    new TWEEN.Tween(this.defeatText).to({ x: e }, 1e3).easing(TWEEN.Easing.Quadratic.Out).onComplete(function() { new TWEEN.Tween(this.boss).to({ alpha: 1 }).start(), new TWEEN.Tween(this.boss.scale).to({ x: 2.1, y: 2.1 }, 1e3).onComplete(function() { t.start() }).start() }.bind(this)).start(); var t = new TWEEN.Tween(this.boss).to({ alpha: 0 }, 500).onUpdate(function() { this.defeatText.alpha = this.boss.alpha, this.defeatText.alpha = this.boss.alpha }.bind(this)).onComplete(function() { new TWEEN.Tween(this.defeatText).to({ alpha: 0 }, 500).start(), new TWEEN.Tween(this.desk).to({ alpha: 0 }, 500).onComplete(function() { this.goOut() }.bind(this)).start() }.bind(this)) }

function MainGame() { GameWindow.call(this), MainGame.i = this; var t = null;
    this.sparksArray = [], this.dmgArray = [], this.bigBtn = new PIXI.Graphics, this.introFill = new PIXI.Graphics, this.bigBtn.beginFill(16724736, 0), this.bigBtn.scale.set(3), this.bigBtn.drawRect(-Game.app.renderer.width / 2, -Game.app.renderer.height / 2, Game.app.renderer.width, Game.app.renderer.height), this.addChild(this.bigBtn), this.bgContainer = this.addChild(new Sprite), this.bgContainer.sky = PIXI.Sprite.fromImage("sky"), this.bgContainer.addChild(this.bgContainer.sky), this.bgContainer.sky.anchor.set(.5), this.bgContainer.ground = PIXI.Sprite.fromImage("ground"), this.bgContainer.addChild(this.bgContainer.ground), this.bgContainer.ground.anchor.set(.5), this.bgContainer.desk = PIXI.Sprite.fromImage("desk"), this.bgContainer.addChild(this.bgContainer.desk), this.bgContainer.desk.anchor.set(.5), this.bgContainer.desk.rotation = -Math.PI / 2, this.introFill.beginFill(0, .8), this.introFill.scale.set(3), this.introFill.drawRect(-Game.app.renderer.width / 2, -Game.app.renderer.height / 2, Game.app.renderer.width, Game.app.renderer.height), this.hand = PIXI.Sprite.fromImage("hand"), this.addChild(this.hand), this.hand.anchor.set(.5), this.hand.scale.set(.1), this.hand.rotation = -Math.PI / 5, this.handAttack = PIXI.Sprite.fromImage("hand"), this.addChild(this.hand), this.handAttack.anchor.set(.5), this.handAttack.scale.set(.1), this.handAttack.rotation = -Math.PI / 5, this.tapAttack = new PIXI.Text(I18.f("TAP_TO_ATTACK!"), { fontFamily: "OpenSans", fontSize: 90, fill: "#ffffff", fontStyle: "italic", align: "center", stroke: "#000", padding: 30, strokeThickness: 5 }), this.tapAttack.anchor.set(.5), this.addChild(this.tapAttack), this.bigBtn.interactive = !0, this.bigBtn.on("pointerdown", function(e) { CONFIG.totalTapsSDK.isSet && ++i === CONFIG.totalTapsSDK.val && (callSDK("download"), CONFIG.totalTapsSDK.isSet = null);
        this.introFill.visible && (this.introFill.visible = !1, this.hand.visible = !1, this.handAttack.visible = !1, this.tapAttack.visible = !1, this.enemy.enemyIcon.alpha = 1, this.enemy.counterText.alpha = 1, this.enemy.angryBird.name.alpha = 1, this.time.startSet(), TWEEN.remove(t));
        this.hitAttack && this.hero.onClick();
        this.isdown = !0, this.currEnem.bar.updateValue(this.currDMG) && (this.bigBtn.interactive = !1, this.currEnem.visible = !1, this.smoke.onClick(n), this.emitter.emit = !0, this.enemy.counter += 1);
        this.enemy.counterText.text = this.enemy.counter + "/5", this.createSparks(e.data), this.createDMG() }, this), this.lvlBtn = new LvlUpButton, this.currDMG = this.lvlBtn.currDMG, this.enemy = new Enemy, this.currEnem = this.enemy.enemies.shift(), this.currEnem.visible = !0, this.hero = new Hero, this.score = new Score, this.smoke = new Smoke, this.bar = new ProgressBar, this.download = new DownloadBtn, this.time = new Time, this.time.updateTime(), this.heaven = new Heaven, this.hitAttack = new HitAttack, this.enemy.counterText.alpha = .5, this.enemy.enemyIcon.alpha = .5, this.enemy.counterText.alpha = .5, this.enemy.angryBird.name.alpha = .5, this.addChild(this.time, this.score, this.download, this.introFill, this.enemy, this.smoke, this.hero, this.tapAttack, this.hand, this.hitAttack, this.lvlBtn, this.hitAttack.clickHand, this.heaven); var i = 0; var n = function() { this.currEnem = this.enemy.enemies.shift(), this.currEnem && (this.currEnem.visible = !0), this.score.sum += this.score.gain.shift(), this.score.pushScore(this.score.sum), this.score.sum > this.lvlBtn.currPrice && (this.lvlBtn.hovLvl.visible = !0, this.lvlBtn.plague.visible = !1), "Ohohono" === this.currEnem.name.text && this.hitAttack.show(), this.onResize() }.bind(this);
    this.containerCoin = this.addChild(new PIXI.Container), this.emitter = new PIXI.particles.Emitter(this.containerCoin, [PIXI.Texture.fromImage("scorebar")], MainGame.coin), this.emitter.emit = !1, this.onResize(), t = new TWEEN.Tween(this.hand.scale).repeat(5).yoyo(!0).to({ x: .15, y: .15 }, 500).onComplete(function() { new TWEEN.Tween(this.introFill).to({ alpha: 0 }).onComplete(function() { this.enemy.counterText.alpha = 1, this.enemy.enemyIcon.alpha = 1, this.enemy.counterText.alpha = 1, this.enemy.angryBird.name.alpha = 1, this.tapAttack.visible = !1, this.hand.visible = !1 }.bind(this)).start() }.bind(this)).start(), window.intro = this, MainGame.i = this }

function Outro() { PIXI.Sprite.call(this), this.plagueI = new PIXI.Graphics, this.sky = PIXI.Sprite.fromImage("sky"), this.addChild(this.sky), this.sky.anchor.set(.5), this.ground = PIXI.Sprite.fromImage("ground"), this.addChild(this.ground), this.ground.anchor.set(.5), this.plagueI.beginFill(0, .8), this.plagueI.scale.set(3), this.plagueI.drawRect(-Game.app.renderer.width / 2, -Game.app.renderer.height / 2, Game.app.renderer.width, Game.app.renderer.height), this.addChild(this.plagueI), this.desk = PIXI.Sprite.fromImage("desk"), this.addChild(this.desk), this.desk.anchor.set(.5), this.winnerText1 = new PIXI.Text(I18.f("DARK_LORD_DEFEATED"), { fontFamily: "TitanOne", fontWeight: "bold", align: "center", fontSize: 100, padding: 30, lineJoin: "round", fill: ["#FED331", "#FDAA2A", "#FD9627"], dropShadow: !0, dropShadowBlur: .6, dropShadowColor: "#000", fillGradientStops: [.1, .4, .5], fillGradientType: 1, stroke: "#000", strokeThickness: 10 }), this.winnerText1.anchor.set(.5), this.addChild(this.winnerText1), this.winnerText2 = new PIXI.Text(I18.f("DARK_LORD_DEF"), { fontFamily: "TitanOne", fontWeight: "bold", align: "center", lineJoin: "round", fontSize: 100, padding: 30, fill: ["#FED331", "#FDAA2A", "#FD9627"], dropShadow: !0, dropShadowBlur: .6, fillGradientStops: [.1, .5, .7], fillGradientType: 1, stroke: "#000", strokeThickness: 10 }), this.winnerText2.anchor.set(.5), this.addChild(this.winnerText2), this.continueText = new PIXI.Text(I18.f("CONTINUE"), { fontFamily: "OpenSans", fontWeight: "bold", align: "center", fontSize: 70, padding: 30, fill: "#ffffff", stroke: "#000", strokeThickness: 5 }), this.continueText.anchor.set(.5), this.addChild(this.continueText), this.download = this.addChild(new DownloadBtn), this.waitHero = this.addChild(new PIXI.Container); var e = this.waitHero.addChild(new AnimatedSprite("heroWait/heroWait_"));
    e.scale.set(2.5), e.animationSpeed = .09, this.addChild(this.download), this.onResize() }

function Heaven() { PIXI.Sprite.call(this), this.visible = !1, (Heaven.i = this).plague = new PIXI.Graphics, this.plague.beginFill(0, .9), this.plague.scale.set(3), this.plague.drawRect(-Game.app.renderer.width / 2, -Game.app.renderer.height / 2, Game.app.renderer.width, Game.app.renderer.height), this.addChild(this.plague), this.containerStar = this.addChild(new PIXI.Container), this.emitter = new PIXI.particles.Emitter(this.containerStar, [PIXI.Texture.fromImage("pin_00"), PIXI.Texture.fromImage("pin_01"), PIXI.Texture.fromImage("pin_02"), PIXI.Texture.fromImage("pin_03"), PIXI.Texture.fromImage("pin_04")], Heaven.star), this.heavenIcon = PIXI.Sprite.fromImage("strike_icon"), this.heavenIcon.scale.set(.6), this.heavenIcon.anchor.set(.5), this.addChild(this.heavenIcon), this.heavenText = this.addChild(new PIXI.Text(I18.f("HEAVENLY_STRIKE"), { fontFamily: "OpenSans", fontWeight: "bold", align: "center", fontSize: 100, padding: 30, fill: ["#FFFFFF", "#F7F5F5", "#E8E8E8"], stroke: "#000", fillGradientStops: [.1, .7, .8], fillGradientType: 0, strokeThickness: 5 })), this.heavenText.anchor.set(.3), this.heavenHero = new AnimatedSprite("heavenlyStrike/heavenlyStrike_"), this.heavenHero.scale.set(1.9), this.heavenHero.loop = !1, this.heavenHero.stop(), this.heavenHero.anchor.set(.51, .793), this.heavenHero.animationSpeed = .09, this.addChild(this.heavenHero), this.heavenHero.visible = !1, this.handHeav = PIXI.Sprite.fromImage("hand"), this.addChild(this.handHeav), this.handHeav.anchor.set(.5), this.handHeav.scale.set(.2), this.handHeav.alpha = 0, this.handHeav.rotation = -Math.PI / 2, this.emitter.emit = !1, this.plague.once("pointerdown", function(e) { this.plague.visible && (this.plague.visible = !1, this.heavenIcon.visible = !1, this.heavenText.visible = !1, this.handHeav.visible = !1, MainGame.i.hero.visible = !1, this.heavenHero.visible = !0, this.containerStar.visible = !1, this.heavenHero.play(), this.heavenHero.onComplete = function() { Heaven.i.heavenHero.visible = !1, MainGame.i.hero.visible = !0, MainGame.i.lastChance() }) }, this), this.onResize() } Game.container = null, Game.size = { w: 960, h: 960 }, Game.app = null, Game.currentWindow = null, Game.init = function(e) { Game.container = e || document.body; var t = new PIXI.Application(Game.size.w, Game.size.h, { transparent: !1, backgroundColor: 0 });
    Game.container.appendChild(t.view), t.ticker.add(Game.tick), Game.app = t, window.SoundsManager && SoundsManager.init(), window.I18 && CONFIG.I18 && I18.init(CONFIG.I18.locale, CONFIG.I18.strings), Game.preloader = new AssetsPreloader(ASSETS), Game.preloader.preload(Game.start) }, Game.showWindow = function(e) { if (Game.currentWindow && Game.currentWindow.onHide) { var t = Game.currentWindow;
        t.onHide(function() { t.onRemove && t.onRemove(), Game.app.stage.removeChild(t) }) } Game.app.stage.addChild(e), Game.currentWindow = e, Game.currentWindow.onShow && Game.currentWindow.onShow(), e.position.set(Game.app.renderer.width / 2, Game.app.renderer.height / 2) }, Game.onResize = function() { Game.currentWindow && (Game.currentWindow.position.set(Game.app.renderer.width / 2, Game.app.renderer.height / 2), Game.currentWindow.onResize && Game.currentWindow.onResize()) }, Game.start = function() { Game.showWindow(new Intro) }, Game.getSystemFont = function() { return "-apple-system,BlinkMacSystemFont,Roboto,Helvetica,Arial,sans-serif" }, Game.tick = function() { var e = PIXI.ticker.shared.elapsedMS;
    window.TWEEN && TWEEN.update(), window.SpineSprite && SpineSprite.update(e), window.ParticlesSprite && ParticlesSprite.update(e), Game.currentWindow && Game.currentWindow.tick && Game.currentWindow.tick(e) }, Enemy.prototype = Object.create(PIXI.Container.prototype), Enemy.prototype.updateAllBars = function(e) { for (i = 0; i < this.enemies.length; i++) this.enemies[i].bar.updtBar(e, this.enemies[i].DMG) }, Enemy.prototype.barOnResize = function(e) { for (i = 0; i < this.enemies.length; i++) { var t = this.enemies[i];
        t.name.position.copy(t.name.pos[e === LayoutManager.PORTRAIT ? "p" : "l"]) } MainGame.i.currEnem.name.position.copy(MainGame.i.currEnem.name.pos[e === LayoutManager.PORTRAIT ? "p" : "l"]), 1.4 < LayoutManager.height / LayoutManager.width && (MainGame.i.currEnem.bar.y -= 100, MainGame.i.currEnem.name.y -= 200) }, Hero.prototype = Object.create(PIXI.Container.prototype), Hero.prototype.onClick = function() { var e = this,
        t = 0;
    this.hero.gotoAndPlay(this.frame + 12), this.hero.onFrameChange = function() { 12 <= ++t && (e.frame = e.hero.currentFrame, e.hero.gotoAndStop(12), e.hero.onFrameChange = null) } }, ProgressBar.c = 0, ProgressBar.prototype = Object.create(PIXI.Sprite.prototype), ProgressBar.prototype.reset = function() { this.val = this.front.width, this.updateMask(this.val) }, ProgressBar.prototype.updtBar = function(e, t) { this.part = this.front.width * e / t }, ProgressBar.prototype.updateValue = function(e) { this.val <= this.front.width / 2 && "Dark Lord" === this.parent.name.text && MainGame.i.heaven.show(), this.max -= e; var t = this.max <= 0; return this.val -= this.part, console.log("this.val " + this.val), this.updateMask(this.val), t }, ProgressBar.prototype.updateMask = function(e) { this.graphics.clear(), this.graphics.beginFill(16740363, 1), this.graphics.drawRect(this.front.x - this.front.width / 2, this.front.y - this.front.height / 2, e, this.front.height) }, Score.prototype = Object.create(PIXI.Sprite.prototype), Score.prototype.pushScore = function(e) { this.tweenCounter && TWEEN.remove(this.tweenCounter), this.playing = !1, this.play(e) }, Score.prototype.play = function(e) { this.playing || (this.playing = !0); var t = this.gainText,
        i = { amount: +t.text },
        n = { amount: e };
    this.tweenCounter = new TWEEN.Tween(i).to(n, 500).onUpdate(function() { i.amount = Math.round(i.amount), t.text = i.amount }).start();
    new TWEEN.Tween(this.coinScore.scale).repeat(3).yoyo(!0).to({ x: 1.5, y: 1.5 }, 200).start() }, LvlUpButton.prototype = Object.create(PIXI.Sprite.prototype), LvlUpButton.prototype.handleClick = function() { this.hovLvl.visible && (MainGame.i.score.sum -= this.currPrice, MainGame.i.score.pushScore(MainGame.i.score.sum), MainGame.i.currDMG = this.dmg.shift(), this.currPrice = this.price.shift(), MainGame.i.currEnem.bar.updtBar(MainGame.i.currDMG, MainGame.i.currEnem.DMG), MainGame.i.enemy.updateAllBars(MainGame.i.currDMG), this.priceText.text = this.currPrice, this.lvl += 1, this.heroLevelCounter.text = this.lvl, this.dmgText.text = "+" + MainGame.i.currDMG + " DMG", MainGame.i.score.sum < this.currPrice && (this.hovLvl.visible = !1, this.plague.visible = !0)) }, Smoke.prototype = Object.create(AnimatedSprite.prototype), Smoke.prototype.onClick = function(e) { this.gotoAndPlay(0), this.visible = !0, e && (this.onComplete = function() { MainGame.i.bigBtn.interactive = !0, e() }) }, HitAttack.prototype = Object.create(PIXI.Sprite.prototype), HitAttack.prototype.show = function() { this.visible = !0, MainGame.i.lvlBtn.visible = !0, new TWEEN.Tween(this.clickHand.scale).repeat(1 / 0).yoyo(!0).to({ x: .14, y: .14 }, 500).delay(200).start(), new TWEEN.Tween(this.clickHand).to({ alpha: 1 }, 300).start() }, HitAttack.prototype.onResize = function() { var e = (Game.app.renderer.width / Game.app.renderer.height).toFixed(1);
    LayoutManager.orientation == LayoutManager.LANDSCAPE ? (1.9 < e ? (this.clickHand.position.set(.42 * Game.app.screen.width, .3 * Game.app.screen.height), this.clickHand.scale.set(.17)) : 1.7 < e && e < 1.9 ? (this.clickHand.position.set(.42 * Game.app.screen.width, .3 * Game.app.screen.height), this.clickHand.scale.set(.17)) : 1.2 < e && (this.clickHand.position.set(.42 * Game.app.screen.width, .3 * Game.app.screen.height), this.clickHand.scale.set(.17)), this.hitText.position.set(.095 * -Game.app.screen.width, .1 * -Game.app.screen.height)) : (.5 < e && e < .7 ? (this.clickHand.position.set(.365 * Game.app.screen.width, .35 * Game.app.screen.height), this.clickHand.scale.set(.159)) : e <= .5 ? (this.clickHand.position.set(.365 * Game.app.screen.width, .37 * Game.app.screen.height), this.clickHand.scale.set(.159)) : e < .9 && (this.clickHand.position.set(.365 * Game.app.screen.width, .35 * Game.app.screen.height), this.clickHand.scale.set(.159)), this.hitText.position.set(0, .1 * -Game.app.screen.height)) }, DownloadBtn.prototype = Object.create(PIXI.Sprite.prototype), DownloadBtn.prototype.handleClick = function() { callSDK("download") }, (Time.constructor = Time).prototype = Object.create(PIXI.Container.prototype), Time.prototype.updateTime = function() { Time.i.time -= 1e3, Time.i.timeText.setText(Time.i.time / 1e3 + "s"), 0 == Time.i.time && clearInterval(Time.i.timeInterval), CONFIG.byTimeSDK.isSet && Time.i.time === CONFIG.byTimeSDK.val && callSDK("download") }, Time.prototype.getTimeString = function(e) { var t = parseInt(e / 1e3 % 60); return t = t < 10 ? "0" + t : t }, Time.prototype.startSet = function() { this.timeInterval = setInterval(this.updateTime, 1e3) }, Intro.prototype = Object.create(GameWindow.prototype), Intro.prototype.onResize = function() { var e = (Game.app.renderer.width / Game.app.renderer.height).toFixed(1);
    LayoutManager.orientation == LayoutManager.LANDSCAPE ? (1.9 < e ? (this.boss.position.set(.3 * Game.app.screen.width, Game.app.screen.height / 2 - 300), this.defeatText.style.fontSize = 120) : 1.7 < e && e < 1.9 ? (this.defeatText.style.fontSize = 120, this.boss.position.set(.25 * Game.app.screen.width, Game.app.screen.height / 2 - 300)) : 1.2 < e && (this.boss.position.set(.22 * Game.app.screen.width, Game.app.screen.height / 2 - 300), this.defeatText.style.fontSize = 90), this.sky.scale.x = 3, this.ground.scale.x = 3, this.sky.position.set(.17 * -Game.app.screen.width, 0), this.ground.position.set(.17 * -Game.app.screen.width, .7 * Game.app.screen.height), this.defeatText.position.set(.25 * -Game.app.screen.width, 0), this.desk.position.set(0, 0)) : (.5 < e && e < .7 ? (this.boss.position.set(0, Game.app.screen.height / 2 - 500), this.sky.position.set(0, .16 * -Game.app.screen.height), this.ground.position.set(0, .35 * Game.app.screen.height), this.sky.scale.set(1.5)) : e <= .5 ? (this.boss.position.set(0, Game.app.screen.height / 2 - 500), this.sky.position.set(0, .16 * -Game.app.screen.height), this.ground.position.set(0, .35 * Game.app.screen.height), this.sky.scale.set(1.5)) : e < .9 && (this.boss.position.set(0, Game.app.screen.height / 2 - 200), this.sky.position.set(0, .16 * -Game.app.screen.height), this.ground.position.set(0, .35 * Game.app.screen.height), this.sky.scale.set(1.5)), this.desk.position.set(0, -Game.app.screen.height / 2 * .5), this.defeatText.position.set(0, -Game.app.screen.height / 2 * .5), this.defeatText.style.fontSize = 120) }, Intro.prototype.goOut = function() { this.isOut || (this.isOut = !0, Game.currentWindow.alpha = .5, Game.showWindow(new MainGame)) }, MainGame.prototype = Object.create(GameWindow.prototype), MainGame.prototype.goOut = function() { this.isOut = !1, Game.currentWindow.parent.removeChild(Game.currentWindow), this.isOut || (this.isOut = !0, Game.currentWindow = null, Game.showWindow(new Outro)) }, MainGame.prototype.createSparks = function(e) { var t = this.addChild(new Sprite("spark"));
    this.sparksArray.push(t); var i = e.getLocalPosition(t.parent);
    t.x = i.x, t.y = i.y }, MainGame.prototype.createDMG = function(e) { e = Object.assign({ fontFamily: "TitanOne", fontWeight: "bold", fill: ["#FD9136", "#FC5A29", "#FC2D1D"], fillGradientStops: [.1, .7, .8], fontSize: 70, fillGradientType: 0, letterSpacing: 10, stroke: "#000", strokeThickness: 5 }, e || {}), d = this.addChild(new PIXI.Text(this.currDMG, e)), d.anchor.set(.5), d.position.set(this.enemy.cont.x, this.enemy.cont.y - 225), this.dmgArray.push(d) }, MainGame.prototype.tick = function(e) { this.heaven.tick(e), this.emitter.update(e / 1e3); for (var t = 0; t < this.sparksArray.length; t++) this.sparksArray[t].alpha -= .003 * e, this.sparksArray[t].alpha <= 0 && (this.sparksArray[t].parent.removeChild(this.sparksArray[t]), this.sparksArray.splice(t, 1)); for (j = 0; j < this.dmgArray.length; j++) this.dmgArray[j].y -= .06 * e, this.dmgArray[j].alpha -= .001 * e, this.dmgArray[j].y <= -200 && this.dmgArray[j].alpha <= 0 && (this.dmgArray[j].parent.removeChild(this.dmgArray[j]), this.dmgArray.splice(j, 1)) }, MainGame.prototype.lastChance = function() { this.currDMG = 1e5, this.currEnem.bar.front.visible = !1, this.smoke.onClick(), this.createDMG({ fontSize: 150, letterSpacing: 25 }), this.emitter.emit = !0, new TWEEN.Tween(this.enemy.darkLord.getChildAt(0)).to({ alpha: 0 }, 1e3).onComplete(function() { this.bar.front.visible = !1 }.bind(this)).start(), setTimeout(this.goOut, 1750) }, MainGame.prototype.onResize = function() { var e = (Game.app.renderer.width / Game.app.renderer.height).toFixed(1);
    LayoutManager.orientation == LayoutManager.LANDSCAPE ? (1.9 < e ? (this.bgContainer.sky.scale.x = 1.8, this.bgContainer.ground.scale.x = 1.8, this.score.position.set(.379 * Game.app.screen.width, .35 * -Game.app.screen.height), this.lvlBtn.position.set(.385 * Game.app.screen.width, .225 * Game.app.screen.height), this.lvlBtn.heroIcon.position.set(-90, -450), this.lvlBtn.heroIconText.position.set(-20, -220), this.lvlBtn.heroIconLevel.position.set(-130, -175), this.lvlBtn.heroLevelCounter.position.set(-80, -207), this.download.position.set(.377 * Game.app.screen.width, .375 * Game.app.screen.height), this.download.scale.set(.95)) : 1.7 < e && e < 1.9 ? (this.bgContainer.sky.scale.x = 2, this.bgContainer.ground.scale.x = 2, this.score.position.set(.365 * Game.app.screen.width, .35 * -Game.app.screen.height), this.lvlBtn.position.set(.36 * Game.app.screen.width, .225 * Game.app.screen.height), this.lvlBtn.heroIcon.position.set(-80, -450), this.lvlBtn.heroIconText.position.set(0, -220), this.lvlBtn.heroIconLevel.position.set(-110, -175), this.lvlBtn.heroLevelCounter.position.set(-70, -207), this.download.position.set(.36 * Game.app.screen.width, .375 * Game.app.screen.height), this.download.scale.set(.85)) : 1.2 < e ? (this.bgContainer.sky.scale.x = 1.05, this.bgContainer.ground.scale.x = 1.05, this.score.position.set(.356 * Game.app.screen.width, .35 * -Game.app.screen.height), this.lvlBtn.position.set(.335 * Game.app.screen.width, .225 * Game.app.screen.height), this.lvlBtn.heroIcon.position.set(-80, -450), this.lvlBtn.heroIconText.position.set(0, -220), this.lvlBtn.heroIconLevel.position.set(-110, -175), this.lvlBtn.heroLevelCounter.position.set(-70, -207), this.download.position.set(.35 * Game.app.screen.width, .375 * Game.app.screen.height), this.download.scale.set(.8)) : this.bgContainer.position.set(0, 0), this.bgContainer.desk.scale.set(2.8), this.bgContainer.sky.position.set(.17 * -Game.app.screen.width, 0), this.bgContainer.ground.position.set(.17 * -Game.app.screen.width, .7 * Game.app.screen.height), this.bgContainer.desk.position.set(.4 * Game.app.screen.width, 0), this.download.downloadBtnText.position.set(.02 * -Game.app.screen.width, .0015 * -Game.app.screen.height), this.download.downloadBtnText.scale.set(.85), this.download.arrow.position.set(190, 0), this.score.scale.set(1.4), this.score.gainText.position.set(0, 0), this.score.coinScore.position.set(-100, 0), this.bgContainer.desk.visible = !0, this.lvlBtn.dmgText.position.set(0, 30), this.lvlBtn.coin.scale.set(.7), this.lvlBtn.coin.position.set(-100, -50), this.lvlBtn.priceText.position.set(0, -30), this.lvlBtn.heroIcon.scale.set(1.5), this.lvlBtn.heroIconLevel.scale.set(.7), this.smoke.position.set(.095 * -Game.app.screen.width, 10), this.time.timeText.position.set(.375 * -Game.app.screen.width, .425 * -Game.app.screen.height), this.enemy.counterText.position.set(.105 * Game.app.screen.width, .355 * -Game.app.screen.height), this.enemy.counterText.scale.set(.75), this.enemy.enemyIcon.scale.set(.75), this.enemy.enemyIcon.position.set(.105 * Game.app.renderer.width, .435 * -Game.app.renderer.height), this.tapAttack.position.set(.095 * -Game.app.screen.width, .3 * -Game.app.screen.height), this.hand.position.set(.0015 * Game.app.screen.width, .156 * Game.app.screen.height), this.hero.position.set(.095 * -Game.app.screen.width, .156 * Game.app.screen.height), this.enemy.cont.position.set(.095 * -Game.app.screen.width, .17 * Game.app.screen.height), this.currEnem.bar.y = this.currEnem.pos.l, this.containerCoin.position.set(.095 * -Game.app.screen.width, this.bgContainer.ground.y - 670)) : (.5 < e && e < .7 ? (this.bgContainer.sky.position.set(0, .16 * -Game.app.screen.height), this.bgContainer.ground.position.set(0, .35 * Game.app.screen.height), this.bgContainer.sky.scale.set(1.5), this.enemy.counterText.position.set(0, .395 * -Game.app.screen.height), this.score.position.set(0, .205 * Game.app.screen.height), this.lvlBtn.position.set(.325 * Game.app.screen.width, .295 * Game.app.screen.height), this.enemy.enemyIcon.scale.set(.75), this.enemy.counterText.scale.set(.75), this.enemy.enemyIcon.position.set(0, .455 * -Game.app.screen.height), this.time.timeText.scale.set(1)) : e <= .5 ? (this.bgContainer.sky.position.set(0, .16 * -Game.app.screen.height), this.bgContainer.ground.position.set(0, .35 * Game.app.screen.height), this.bgContainer.sky.scale.set(1.5), this.enemy.counterText.position.set(0, .415 * -Game.app.screen.height), this.score.position.set(0, .225 * Game.app.screen.height), this.lvlBtn.position.set(.325 * Game.app.screen.width, .335 * Game.app.screen.height), this.enemy.enemyIcon.scale.set(.75), this.enemy.counterText.scale.set(.75), this.enemy.enemyIcon.position.set(0, .455 * -Game.app.screen.height), this.time.timeText.scale.set(1)) : e < .9 ? (this.bgContainer.sky.position.set(0, .16 * -Game.app.screen.height), this.bgContainer.ground.position.set(0, .35 * Game.app.screen.height), this.bgContainer.sky.scale.set(1.5), this.enemy.counterText.position.set(0, .41 * -Game.app.screen.height), this.score.position.set(0, .155 * Game.app.screen.height), this.lvlBtn.position.set(.345 * Game.app.screen.width, .265 * Game.app.screen.height), this.enemy.enemyIcon.scale.set(.65), this.enemy.counterText.scale.set(.55), this.enemy.enemyIcon.position.set(0, .46 * -Game.app.screen.height), this.time.timeText.scale.set(.8)) : this.bgContainer.position.set(0, 0), this.download.downloadBtnText.position.set(.05 * -Game.app.screen.width, .0015 * -Game.app.screen.height), this.download.downloadBtnText.scale.set(.9), this.download.arrow.position.set(180, 0), this.download.position.set(0, Game.app.screen.height / 2 - 100), this.download.scale.set(1.05), this.bgContainer.desk.visible = !1, this.score.gainText.position.set(0, 0), this.score.coinScore.position.set(-100, 0), this.lvlBtn.dmgText.position.set(0, 30), this.lvlBtn.coin.scale.set(.7), this.lvlBtn.coin.position.set(-100, -50), this.lvlBtn.priceText.position.set(0, -30), this.lvlBtn.heroIcon.position.set(-710, -50), this.lvlBtn.heroIcon.scale.set(1), this.lvlBtn.heroIconText.position.set(-430, -20), this.lvlBtn.heroLevelCounter.position.set(-510, -12), this.lvlBtn.heroIconLevel.scale.set(.7), this.lvlBtn.heroIconLevel.position.set(-550, 20), this.smoke.position.set(.015 * -Game.app.screen.width, this.bgContainer.ground.y - 670), this.time.timeText.position.set(.375 * -Game.app.screen.width, .455 * -Game.app.screen.height), this.tapAttack.position.set(0, .3 * -Game.app.screen.height), this.hand.position.set(.095 * Game.app.screen.width, this.bgContainer.ground.y - 520), this.hero.position.set(0, this.bgContainer.ground.y - 520), this.enemy.cont.position.set(0, this.bgContainer.ground.y - 510), this.currEnem.bar.y = this.currEnem.pos.p, 1.2 < LayoutManager.height / LayoutManager.width && (this.currEnem.bar.name -= 120), this.containerCoin.position.set(0, this.bgContainer.ground.y - 670), 1.2 < LayoutManager.height / LayoutManager.width && (this.currEnem.bar.y -= 100)), this.enemy.barOnResize(LayoutManager.orientation), this.heaven.onResize(), this.hitAttack.onResize() }, MainGame.coin = { alpha: { start: 1.74, end: 1 }, scale: { start: .1, end: 1.2 }, color: { start: "ffffff", end: "ffffff" }, speed: { start: 700, end: 50 }, startRotation: { min: 0, max: 360 }, rotationSpeed: { min: 0, max: 200 }, lifetime: { min: .4, max: .7 }, blendMode: "normal", frequency: .001, emitterLifetime: .2, maxParticles: 15, pos: { x: 20, y: 10 }, addAtBack: !0, spawnType: "point" }, Outro.prototype = Object.create(GameWindow.prototype), Outro.prototype.onResize = function() { var e = (Game.app.renderer.width / Game.app.renderer.height).toFixed(1);
    LayoutManager.orientation == LayoutManager.LANDSCAPE ? (this.winnerText2.visible = !0, this.winnerText1.visible = !1, 1.9 < e ? this.waitHero.position.set(.3 * -Game.app.screen.width, Game.app.screen.height / 2 - 400) : 1.7 < e && e < 1.9 ? this.waitHero.position.set(.25 * -Game.app.screen.width, Game.app.screen.height / 2 - 400) : 1.2 < e && this.waitHero.position.set(.29 * -Game.app.screen.width, Game.app.screen.height / 2 - 400), this.sky.scale.x = 3, this.ground.scale.x = 3, this.sky.position.set(.17 * -Game.app.screen.width, 0), this.ground.position.set(.17 * -Game.app.screen.width, .7 * Game.app.screen.height), this.winnerText2.position.set(0, .25 * -Game.app.screen.height), this.continueText.position.set(.2 * Game.app.screen.width, 0), this.desk.position.set(0, -Game.app.screen.height / 2 * .5), this.desk.scale.x = 5.5, this.desk.scale.y = .6, this.download.downloadBtnText.position.set(.02 * -Game.app.screen.width, .0015 * -Game.app.screen.height), this.download.downloadBtnText.scale.set(.9), this.download.arrow.position.set(180, 0), this.download.position.set(.2 * Game.app.screen.width, Game.app.screen.height / 2 - 300), this.download.scale.set(1.25)) : (this.winnerText2.visible = !1, this.winnerText1.visible = !0, .5 < e && e < .7 ? (this.download.position.set(0, Game.app.screen.height / 2 - 330), this.waitHero.position.set(-100, this.download.y - 275), this.desk.position.set(0, -Game.app.screen.height / 2 * .5), this.winnerText1.position.set(0, -Game.app.screen.height / 2 * .5), this.continueText.position.set(0, -Game.app.screen.height / 2 * .2), this.sky.position.set(0, .16 * -Game.app.screen.height), this.ground.position.set(0, .35 * Game.app.screen.height), this.sky.scale.set(1.5)) : e <= .5 ? (this.download.position.set(0, Game.app.screen.height / 2 - 510), this.waitHero.position.set(-100, this.download.y - 275), this.desk.position.set(0, -Game.app.screen.height / 2 * .5), this.winnerText1.position.set(0, -Game.app.screen.height / 2 * .5), this.continueText.position.set(0, -Game.app.screen.height / 2 * .2), this.sky.position.set(0, .16 * -Game.app.screen.height), this.ground.position.set(0, .35 * Game.app.screen.height), this.sky.scale.set(1.5)) : e < .9 && (this.download.position.set(0, Game.app.screen.height / 2 - 210), this.waitHero.position.set(-100, this.download.y - 275), this.desk.position.set(0, -Game.app.screen.height / 2 * .6), this.winnerText1.position.set(0, -Game.app.screen.height / 2 * .6), this.continueText.position.set(0, -Game.app.screen.height / 2 * .2), this.sky.position.set(0, .16 * -Game.app.screen.height), this.ground.position.set(0, .35 * Game.app.screen.height), this.sky.scale.set(1.5)), this.desk.scale.x = 5.5, this.desk.scale.y = 1.2, this.download.downloadBtnText.position.set(.04 * -Game.app.screen.width, .0015 * -Game.app.screen.height), this.download.downloadBtnText.scale.set(.95), this.download.arrow.position.set(180, 0), this.download.scale.set(1.05)) }, Heaven.prototype = Object.create(PIXI.Sprite.prototype), Heaven.prototype.show = function() { MainGame.i.bigBtn.interactive = !1, this.visible = !0, this.tweenHeav = new TWEEN.Tween(this.plague).to({ alpha: .5 }, 500), new TWEEN.Tween(this.heavenIcon.scale).to({ x: 1.5, y: 1.5 }, 200).onComplete(function() { new TWEEN.Tween(this.heavenText.scale).to({ x: 1, y: 1 }, 200).onComplete(function() { this.emitter.emit = !0, this.plague.interactive = !0, new TWEEN.Tween(this.handHeav.scale).repeat(19).yoyo(!0).to({ x: .15, y: .15 }, 500).delay(200).start(), new TWEEN.Tween(this.handHeav).to({ alpha: 1 }, 300).start() }.bind(this)).start() }.bind(this)).start() }, Heaven.prototype.tick = function(e) { this.emitter.update(e / 1e3) }, Heaven.prototype.onResize = function() { var e = (Game.app.renderer.width / Game.app.renderer.height).toFixed(1);
    LayoutManager.orientation == LayoutManager.LANDSCAPE ? (1.9 < e ? (this.containerStar.position.set(0, Game.app.screen.height / 2 - 570), this.heavenIcon.position.set(0, Game.app.screen.height / 2 - 570), this.handHeav.position.set(260, Game.app.screen.height / 2 - 670)) : 1.7 < e && e < 1.9 ? (this.containerStar.position.set(0, Game.app.screen.height / 2 - 570), this.heavenIcon.position.set(0, Game.app.screen.height / 2 - 570), this.handHeav.position.set(260, Game.app.screen.height / 2 - 670)) : 1.2 < e && (this.containerStar.position.set(0, Game.app.screen.height / 2 - 570), this.heavenIcon.position.set(0, Game.app.screen.height / 2 - 570), this.handHeav.position.set(260, Game.app.screen.height / 2 - 670)), this.heavenText.position.set(-80, Game.app.screen.height / 2 - 250), this.heavenText.style.fontSize = 70) : (.5 < e && e < .7 ? (this.handHeav.position.set(270, Game.app.screen.height / 2 - 1060), this.heavenIcon.position.set(0, Game.app.screen.height / 2 - 1050), this.heavenText.position.set(-100, this.heavenIcon.y + 350), this.containerStar.position.set(0, Game.app.screen.height / 2 - 1050)) : e <= .5 ? (this.handHeav.position.set(270, Game.app.screen.height / 2 - 1060), this.heavenIcon.position.set(0, 0), this.heavenText.position.set(-100, this.heavenIcon.y + 350), this.containerStar.position.set(0, 0)) : e < .9 && (this.containerStar.position.set(0, Game.app.screen.height / 2 - 750), this.heavenIcon.position.set(0, Game.app.screen.height / 2 - 750), this.heavenText.position.set(-100, this.heavenIcon.y + 300), this.handHeav.position.set(290, Game.app.screen.height / 2 - 800)), this.heavenText.style.fontSize = 100), this.heavenHero.position = MainGame.i.hero.position }, Heaven.star = { alpha: { start: 1.74, end: 1 }, scale: { start: .1, end: 1.2 }, color: { start: "ffffff", end: "ffffff" }, speed: { start: 700, end: 50 }, startRotation: { min: 0, max: 460 }, rotationSpeed: { min: 0, max: 200 }, lifetime: { min: .4, max: 1.7 }, blendMode: "normal", frequency: .001, emitterLifetime: 4.5, maxParticles: 45, pos: { x: 20, y: 20 }, addAtBack: !0, spawnType: "point" };